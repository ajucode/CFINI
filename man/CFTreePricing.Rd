% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CFTreePricing.R
\name{CFTreePricing}
\alias{CFTreePricing}
\title{Pricing options with a multinomial tree}
\usage{
CFTreePricing(Q, EQ, R, S, option, Type = "E", option.par)
}
\arguments{
\item{Q}{equivalent discrete martingale measure}

\item{EQ}{discrete version of the equivalent discrete martingale average}

\item{R}{term structure of the interest rate, could be a fixed value or a multinomial lattice}

\item{S}{multinomial lattice}

\item{option}{function defining the option over S}

\item{Type}{option type a character that specifies the king of option, by default 'E' european
option, 'A' american option, 'F' futures option, 'S' swap option, 'P' ...}

\item{option.par}{list of parameter for the option}
}
\value{
A list with a tree structure of the asset evolution
}
\description{
The option pricing can be made with a multinomial tree, this functions can 
price different types of options
}
\note{
Pricing a Forward option is like to price an European option with the identity function
regarded as the option
}
\examples{
library( gtools )

# Risk neutral average
EQ<-function( Q, C ) {
  return( sum( Q * C ) )
}

# Option
call<-function( S, K ) {
  max( S - K, 0 )
}
call.par<-list( K = 99 )

u<-c( 0.9, 1, 1.1 )
S0<-100
Q<-c( 0.1, 0.7, 0.2 )
R<-0.03

S<-MTree( 5, u, S0 )
C<-CFTreePricing(  Q, R, EQ, S, call, Type = 'E', call.par )

R<-MTree( 6, u, 0.03 )
Cts<-CFTreePricing(  Q, R, EQ, S, call, Type = 'E', call.par )
}
\author{
Pedro Guarderas
}
